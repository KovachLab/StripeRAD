###Rubias 
###Population Assignment

###Packages
library(devtools)
#Rubias
install.packages("rubias") 
library(rubias)
#Radiator
devtools::install_github("thierrygosselin/radiator")
library(radiator)


#####assignPOP#####
install.packages("assignPOP")
library(assignPOP)

#Read genepop file
asspop_genpop <- read.Genepop("~/Documents/Thesis_Stuff/Analyses/Pop_assignment/Allpops_13k.gen", pop.names = c("Roanoke", "Potomac", "Choptank", "Upper_Bay", "Delaware", "Hudson", "Kennebec", "Shebenacadie", "Miramichi"),
        haploid = FALSE)

assignpop_9k <- read.Genepop("~/Documents/Thesis_Stuff/Analyses/Pop_assignment/All_Pops_9k.gen", pop.names = c("Roanoke", "Potomac", "Choptank", "Upper_Bay", "Delaware", "Hudson", "Kennebec", "Shebenacadie", "Miramichi"),
                             haploid = FALSE)

#Population assignment with Monte-carlo cross validation
asspop_mc <- assign.MC(asspop_genpop, train.inds = c(0.8), train.loci = c(1),
        loci.sample = "fst", interations = 30, model = "svm", dir = "~/Documents/Thesis_Stuff/Analyses/Pop_assignment/assignPOP_results/MC/")

asspop_mc_9k <- assign.MC(assignpop_9k, train.inds = c(0.8), train.loci = c(1),
                       loci.sample = "fst", interations = 30, model = "svm", dir = "~/Documents/Thesis_Stuff/Analyses/Pop_assignment/assignPOP_results/MC_9k/")
asspop_mc_9k
#Population assignment with k-fold cross validation
asspop_kfold <- assign.kfold(asspop_genpop, k.fold = c(3, 4, 5), train.loci = c(1), loci.sample = "random",
        model = "lda", dir = "~/Documents/Thesis_Stuff/Analyses/Pop_assignment/assignPOP_results/Kfold/")

#calculating assignment accuracy
MCaccu <- accuracy.MC(dir = "~/Documents/Thesis_Stuff/Analyses/Pop_assignment/assignPOP_results/MC/")

MCaccu_9k <- accuracy.MC(dir = "~/Documents/Thesis_Stuff/Analyses/Pop_assignment/assignPOP_results/MC_9k/")
MCaccu_9k

Kfoldaccu <- accuracy.kfold(dir = "~/Documents/Thesis_Stuff/Analyses/Pop_assignment/assignPOP_results/Kfold/")

library(ggplot2)
accuracy.plot(MCaccu_9k, pop = c("all", "Roanoke", "Potomac", "Choptank", "Upper_Bay", "Delaware", "Hudson", "Kennebec", "Shebenacadie", "Miramichi")) +
              ylim(0,1) +
              annotate("segment", x=0.4, xend = 3.6, y=0.33, yend = 0.33, colour="red", size=1) +
              ggtitle("Monte-Carlo Cross_Validation") +
              theme(plot.title = element_text(size = 20, face = "bold"))


########RUBIAS###########
##Rubias requires a specific file type, need to convert VCF 
##Use Radiator to convert file

##Make sure Rubias is the commit. Older commits cannot handle large datasets
remotes::install_github("eriqande/rubias")

###Use the Tidy_genomic files from above to convert to gsi_sim file to use in Rubias

##Need a strata file specific for converting to rubias using radiator
Allrivs_rubias_strata <- read.csv("~/Documents/Thesis_Stuff/Analyses/Pop_assignment/All_Rivers_Rubiasconvert.strata.csv")

###Use the tidy genomic file from above assigner runs and convert to rubias format using: write_rubias
All_Rivers_Rubias_13k <- write_rubias(All_Rivers_rad, strata = Allrivs_rubias_strata, filename = NULL)

###write_rubias makes the chromosome columns "double" format when they should be "characters"
## check column format using: 
typeof(All_Rivers_Rubias_13k$SSXF01000001_1__100__3957868.A1)

### to convert them to characters, (FYI- this over-writes your current file)
All_Rivers_Rubias_13k[] <- lapply(All_Rivers_Rubias_13k, as.character)

##All_Rivers_Rubias_13k -> "reference" file used in Rubias

###Checking effectiveness of reference to assign individuals to a repunit
##Using 13,178 SNPs
Allrivs_rubias_assign <- self_assign(reference = All_Rivers_Rubias_Fix, gen_start_col = 6)
head(Allrivs_rubias_assign, n = 100)

repu_sum <- Allrivs_rubias_assign %>%
        group_by(indiv, collection, repunit, inferred_repunit) %>%
        summarise(repu_scaled_like = sum(scaled_likelihood))

head(repu_sum, n = 200)

##summary of assignment results
write.csv(repu_sum, "~/Documents/Thesis_Stuff/Analyses/Pop_assignment/Assign_Summ.csv")

##Using 9,406 SNPs (use same strata file as above)
All_Rivers_Rubias_9k <- write_rubias(All_Rivs_Rad_9K, strata = Allrivs_rubias_strata, filename = NULL)

##convert to chracters
All_Rivers_Rubias_9k[] <- lapply(All_Rivers_Rubias_9k, as.character)

##Run assignment test
Allrivs_rubias_assign_9k <- self_assign(reference = All_Rivers_Rubias_9k, gen_start_col = 6)

head(Allrivs_rubias_assign, n = 100)

##Summarizing assignment test. 
repu_sum_9k <- Allrivs_rubias_assign %>%
        group_by(indiv, collection, repunit, inferred_repunit) %>%
        summarise(repu_scaled_like = sum(scaled_likelihood))




#####Simulating mixtures to to see what kind of accuracy you can expect from panel 

